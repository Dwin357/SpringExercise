<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

<!-- this is what turns on the annotations inside my controllers -->
	<mvc:annotation-driven />
	<context:component-scan base-package="io.dwin357.github.controllers" />


<!-- this provides abstraction of content to properties files and allows them to be toggled -->
		<!-- defines name of abstracted text file (in src/main/resources) -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource" p:basename="messages" />
		<!-- sets up listener to toggle served text file based on appended suffix-key -->
		<!-- paramName defines the query-string key -->
		<!-- defaultLocale defines suffix-key for text file w/out a suffix -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" p:paramName="language" />
	</mvc:interceptors>
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" p:defaultLocale="en" />


<!-- these are two alternative ways to assign where my views will be, both are == -->
<!-- the string returned by the controller will be sandwhiched between the prefix & suffix defined here ...so that better be the view -->
	<!-- long hand, works out of the box -->
	<!-- 
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	-->	
	<!-- short hand, requires xmlns:p above -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
	 p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />

</beans>
